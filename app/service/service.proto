syntax = "proto3";
package courier;

import "google/protobuf/timestamp.proto";

/// Service for working with feeds.
service Feeds {
  /// Gets a list of all of the feeds registered in the service.
  rpc GetFeeds(ListFeedsRequest) returns (FeedList);
  /// Gets a list of the feeds registered to a particular user.
  rpc GetUserFeeds(ListUserFeedsRequest) returns (FeedList);
  /// Registers a new feed on behalf of a user.
  rpc RegisterFeed(RegisterFeedRequest) returns (Feed);
  /// Triggers a background job to refresh an individual feed.
  rpc RefreshFeed(RefreshFeedRequest) returns (JobStatus);
  /// Updates the settings for a user's feed.
  rpc UpdateFeedSettings(UpdateFeedSettingsRequest) returns (Feed);
  /// Refreshes the feeds for a ping request from a blog.
  rpc Ping(PingRequest) returns (FeedList);
}

/**
 * Request message for listing all feeds.
 *
 * This API currently takes no parameters.
 */
message ListFeedsRequest {}
/// Request message for listing feeds for a user.
message ListUserFeedsRequest {
  /// The ID of the user whose feeds should be listed.
  int32 user_id = 1;
}
/// Request message for registering a new feed.
message RegisterFeedRequest {
  /// The ID of the user registering the feed.
  int32 user_id = 1;
  /// The URL of the feed to register.
  string url = 2;
}
/// Request message for refreshing a feed.
message RefreshFeedRequest {
  /// The ID of the feed to refresh.
  int32 feed_id = 1;
}
/// Request message for updating a user's settings for a feed.
message UpdateFeedSettingsRequest {
  /// The ID of the feed to update.
  int32 feed_id = 1;
  /// The user ID whose settings should be changed.
  //  Feeds are potentially shared between users, but settings are user-specific.
  int32 user_id = 2;
  /// The settings changes to make.
  FeedSettingsChanges settings = 3;
}
/// Request message for pinging from a blog.
message PingRequest {
  /// The title of the blog.
  string title = 1;
  /// The home page URL of the blog.
  string url = 2;
}

/// Message describing a feed registered in the service.
message Feed {
  /// The ID of the feed.
  int32 id = 1;
  /// The URL of the feed.
  string url = 2;
  /// Timestamp for when the feed was first registered by any user.
  google.protobuf.Timestamp created_at = 3;
  /// Timestamp for the last time the feed record was changed.
  google.protobuf.Timestamp updated_at = 4;
  /// Timestamp for last time the feed was checked for new content.
  google.protobuf.Timestamp refreshed_at = 5;
  /// The title of the feed, as read from the feed itself.
  string title = 6;
  /// The URL of the home page of the site this feed is for.
  string home_page_url = 7;
  /// The settings the user has configured for the feed. This may be empty if the message is not scoped to a particular user.
  FeedSettings settings = 8;
}

/// Message containing a list of multiple Feeds.
message FeedList {
  /// The feeds in the list.
  repeated Feed feeds = 1;
}

/// Message describing the settings a user has configured for a feed.
message FeedSettings {
  /// Whether the posts in the feed should be tweeted automatically.
  bool autopost = 1;
}

/// Message describing desired changes to a user's settings for a feed.
//  This differs from FeedSettings by being able to distinguish between a setting that should be turned off and one that should be left unchanged.
message FeedSettingsChanges {
  enum Flag {
    /// The value for the setting should not be changed from its current value.
    UNCHANGED = 0;
    /// The setting should be turned off.
    OFF = 1;
    /// The setting should be turned on.
    ON = 2;
  }

  /// Whether the posts in the feed should be tweeted automatically.
  Flag autopost = 1;
}

/// Message describing a background job.
message JobStatus {
  /// Basic description of the current status of the job (e.g. 'refreshing').
  string status = 1;
  /// Unique identifier of the background job.
  string job_id = 2;
}
